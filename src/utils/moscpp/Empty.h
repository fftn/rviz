// Generated by gencpp from file moscpp/Empty.msg
// DO NOT EDIT!


#ifndef MOSCPP_MESSAGE_EMPTY_H
#define MOSCPP_MESSAGE_EMPTY_H

#include "mos_service_traits.h"


#include "moscpp/EmptyRequest.h"
#include "moscpp/EmptyResponse.h"


namespace moscpp
{

struct Empty
{

typedef EmptyRequest Request;
typedef EmptyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Empty
} // namespace moscpp


namespace mos
{
namespace service_traits
{


template<>
struct MD5Sum< ::moscpp::Empty > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::moscpp::Empty&) { return value(); }
};

template<>
struct DataType< ::moscpp::Empty > {
  static const char* value()
  {
    return "moscpp/Empty";
  }

  static const char* value(const ::moscpp::Empty&) { return value(); }
};


// service_traits::MD5Sum< ::moscpp::EmptyRequest> should match
// service_traits::MD5Sum< ::moscpp::Empty >
template<>
struct MD5Sum< ::moscpp::EmptyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::moscpp::Empty >::value();
  }
  static const char* value(const ::moscpp::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::moscpp::EmptyRequest> should match
// service_traits::DataType< ::moscpp::Empty >
template<>
struct DataType< ::moscpp::EmptyRequest>
{
  static const char* value()
  {
    return DataType< ::moscpp::Empty >::value();
  }
  static const char* value(const ::moscpp::EmptyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::moscpp::EmptyResponse> should match
// service_traits::MD5Sum< ::moscpp::Empty >
template<>
struct MD5Sum< ::moscpp::EmptyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::moscpp::Empty >::value();
  }
  static const char* value(const ::moscpp::EmptyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::moscpp::EmptyResponse> should match
// service_traits::DataType< ::moscpp::Empty >
template<>
struct DataType< ::moscpp::EmptyResponse>
{
  static const char* value()
  {
    return DataType< ::moscpp::Empty >::value();
  }
  static const char* value(const ::moscpp::EmptyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace mos

#endif // MOSCPP_MESSAGE_EMPTY_H
